# -*- coding: utf-8 -*-
##Lisa just got a new math workbook. A workbook contains exercise problems, grouped into chapters.
##
##There are nn chapters in Lisa's workbook, numbered from 11 to nn.
##The ii-th chapter has titi problems, numbered from 11 to titi.
##Each page can hold up to kk problems. There are no empty pages or unnecessary spaces, so only the last page of a chapter may contain fewer than kk problems.
##Each new chapter starts on a new page, so a page will never contain problems from more than one chapter.
##The page number indexing starts at 11.
##Lisa believes a problem to be special if its index (within a chapter) is the same as the page number where it's located. Given the details for Lisa's workbook, can you count its number of special problems?
##
##Note: See the diagram in the Explanation section for more details.
##
##Input Format
##
##The first line contains two integers nn and kk — the number of chapters and the maximum number of problems per page respectively. 
##The second line contains nn integers t1,t2,…,tnt1,t2,…,tn, where titi denotes the number of problems in the ii-th chapter.
##
##Constraints
##
##1≤n,k,ti≤1001≤n,k,ti≤100
##Output Format
##
##Print the number of special problems in Lisa's workbook.
##
##Sample Input
##
##5 3  
##4 2 6 1 10
##Sample Output
##
##4
##Explanation
##
##The diagram below depicts Lisa's workbook with n=5n=5 chapters and a maximum of k=3k=3 problems per page. Special problems are outlined in red, and page numbers are in yellow squares.
##
##bear_workbook.png
##
##There are 4 special problems and thus we print the number 4 on a new line.





##<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<Sample solution found in discussion forum>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
##from itertools import count, zip_longest
##def lisas_workbook(n,k,a):
##    page=count(1)
##    return sum([len([1 for probs in zip_longest(*[iter(range(1, num_chpt_probs+1))]*k) if next(page) in probs]) for num_chpt_probs in a])

##Notes in dict creation:
##>>> ke = {1,2,3,4}
##>>> dict([(each,[]) for each in ke])1
##<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

#!/bin/python

import sys

n, k = map(int, raw_input().split())
val = map(int, raw_input().split())
count = 0
x = 0 #For dict key
a = {}
for t in val:
    i = 1 #For number of ques
    x = x + 1
    a[x] = []
    while i<= t:
        a[x].append(i)
        if i%k == 0 and i < t:
            x = x + 1
            a[x] = []
        i = i + 1
#print a
for key, values in a.items():
    if key in values:
        count = count + 1
print count
